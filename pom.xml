<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.reactome.gsea</groupId>
    <artifactId>gsea-service</artifactId>

    <packaging>war</packaging>
    <version>1.0.2</version>
    <name>GseaService</name>

    <description>GSEA REST Service</description>
    <url>https://github.com/nursa-reactome/gsea</url>

    <organization>
        <name>Oregon Health and Science University</name>
        <url>http://www.ohsu.edu/</url>
    </organization>

    <developers>
        <developer>
            <id>loneyf</id>
            <name>Fred Loney</name>
            <email>loneyf@ohsu.edu</email>
            <organization>http://www.ohsu.edu/</organization>
        </developer>
        <developer>
            <id>wug</id>
            <name>Guanming Wu</name>
            <email>wug@ohsu.edu</email>
            <organization>http://www.ohsu.edu/</organization>
        </developer>
    </developers>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <reactome.gsea.model>1.0.1</reactome.gsea.model>
        <failOnMissingWebXml>false</failOnMissingWebXml>
    	<commons.collections.version>4.1</commons.collections.version>
    </properties>

    <dependencies>
        <!-- junit test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/log4j/log4j -->
		<dependency>
    		<groupId>log4j</groupId>
    		<artifactId>log4j</artifactId>
    		<version>1.2.17</version>
		</dependency>
		
        <dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<version>3.1</version>
			<scope>test</scope>
		</dependency>
        <!-- Shared client/server GSEA data model -->
        <dependency>
            <groupId>org.reactome.gsea</groupId>
            <artifactId>gsea-model</artifactId>
            <version>${reactome.gsea.model}</version>
        </dependency>
        
        <!-- Spring MVC Dependency -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>4.3.10.RELEASE</version>
		</dependency>
 		<!-- Jackson API for JSON -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.8.7</version>
		</dependency>
        		<!-- Servlet API -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>
		<!-- Add this for linux distribution. It works fine without using this for some unknown reason under Mac OSX -->
		<dependency>
    		<groupId>com.fasterxml.woodstox</groupId>
    		<artifactId>woodstox-core</artifactId>
    		<version>5.4.0</version>
		</dependency>
		<!--Util -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>${commons.collections.version}</version>
        </dependency>
        <!-- GSEA -->
        <!-- Note: gsea.jar includes lots of dependent libraries, e.g. Apache 
            Commons. This causes conflicts with dependencies which rely on more recent 
            versions of these libraries. For example, if the gsea dependency is first 
            in the class path, then running this GseaService raises the following error: 
            java.lang.NoSuchMethodError: org.apache.commons.logging.Log.isTraceEnabled()Z 
            at org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:78) 
            Thus, this gsea dependency must be placed lost in the path. -->
        <!-- Update: classpath order is indeterminate on the Linux deployment.
            The work-around is to remove the conflicting logging jars from the
            gsea-desktop build. -->
        <!--  Note: gsea-desktop is not a Maven project. Therefore, the gsea
            jar file must be generated from the gsea-desktop fork, then
            installed as a Maven artifact as follows:
            
              mvn install:install-file -Dfile=/path/to/gsea-3.0.jar \
                  -DgroupId=edu.mit.broad -DartifactId=gsea \
                  -Dversion=3.0 -Dpackaging=jar
            -->
        <dependency>
            <groupId>edu.mit.broad</groupId>
            <artifactId>gsea-reactome</artifactId>
            <version>3.0</version>
        </dependency>
    </dependencies>

 	<build>
        <finalName>${project.name}</finalName>
		<sourceDirectory>src/main/java</sourceDirectory>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<!-- Embedded Apache Tomcat required for testing war -->

			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<path>/</path>
					<port>8282</port>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
